//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 wangwei.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1beta1

import (
	"k8s.io/api/autoscaling/v2beta2"
	corev1 "k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	"k8s.io/apimachinery/pkg/util/intstr"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionState) DeepCopyInto(out *ActionState) {
	*out = *in
	if in.UpdateTimestamp != nil {
		in, out := &in.UpdateTimestamp, &out.UpdateTimestamp
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionState.
func (in *ActionState) DeepCopy() *ActionState {
	if in == nil {
		return nil
	}
	out := new(ActionState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasicAuth) DeepCopyInto(out *BasicAuth) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasicAuth.
func (in *BasicAuth) DeepCopy() *BasicAuth {
	if in == nil {
		return nil
	}
	out := new(BasicAuth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryClusterComponent) DeepCopyInto(out *CategoryClusterComponent) {
	*out = *in
	in.CommonCategoryComponent.DeepCopyInto(&out.CommonCategoryComponent)
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = make([]*NamedProperties, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NamedProperties)
				**out = **in
			}
		}
	}
	if in.Replicas != nil {
		in, out := &in.Replicas, &out.Replicas
		*out = new(int32)
		**out = **in
	}
	in.UpdateStrategy.DeepCopyInto(&out.UpdateStrategy)
	if in.Selector != nil {
		in, out := &in.Selector, &out.Selector
		*out = new(v1.LabelSelector)
		(*in).DeepCopyInto(*out)
	}
	in.Template.DeepCopyInto(&out.Template)
	if in.PersistentVolumeClaim != nil {
		in, out := &in.PersistentVolumeClaim, &out.PersistentVolumeClaim
		*out = new(corev1.PersistentVolumeClaimSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.MaxUnavailable != nil {
		in, out := &in.MaxUnavailable, &out.MaxUnavailable
		*out = new(intstr.IntOrString)
		**out = **in
	}
	if in.MaxReplicas != nil {
		in, out := &in.MaxReplicas, &out.MaxReplicas
		*out = new(int32)
		**out = **in
	}
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]v2beta2.MetricSpec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Behavior != nil {
		in, out := &in.Behavior, &out.Behavior
		*out = new(v2beta2.HorizontalPodAutoscalerBehavior)
		(*in).DeepCopyInto(*out)
	}
	if in.Auth != nil {
		in, out := &in.Auth, &out.Auth
		*out = new(BasicAuth)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryClusterComponent.
func (in *CategoryClusterComponent) DeepCopy() *CategoryClusterComponent {
	if in == nil {
		return nil
	}
	out := new(CategoryClusterComponent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryClusterIngress) DeepCopyInto(out *CategoryClusterIngress) {
	*out = *in
	in.CommonCategoryComponent.DeepCopyInto(&out.CommonCategoryComponent)
	in.IngressSpec.DeepCopyInto(&out.IngressSpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryClusterIngress.
func (in *CategoryClusterIngress) DeepCopy() *CategoryClusterIngress {
	if in == nil {
		return nil
	}
	out := new(CategoryClusterIngress)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryClusterMixJob) DeepCopyInto(out *CategoryClusterMixJob) {
	*out = *in
	in.CommonCategoryComponent.DeepCopyInto(&out.CommonCategoryComponent)
	if in.StartingDeadlineSeconds != nil {
		in, out := &in.StartingDeadlineSeconds, &out.StartingDeadlineSeconds
		*out = new(int64)
		**out = **in
	}
	if in.Suspend != nil {
		in, out := &in.Suspend, &out.Suspend
		*out = new(bool)
		**out = **in
	}
	in.JobTemplate.DeepCopyInto(&out.JobTemplate)
	if in.SuccessfulJobsHistoryLimit != nil {
		in, out := &in.SuccessfulJobsHistoryLimit, &out.SuccessfulJobsHistoryLimit
		*out = new(int32)
		**out = **in
	}
	if in.FailedJobsHistoryLimit != nil {
		in, out := &in.FailedJobsHistoryLimit, &out.FailedJobsHistoryLimit
		*out = new(int32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryClusterMixJob.
func (in *CategoryClusterMixJob) DeepCopy() *CategoryClusterMixJob {
	if in == nil {
		return nil
	}
	out := new(CategoryClusterMixJob)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CategoryClusterService) DeepCopyInto(out *CategoryClusterService) {
	*out = *in
	in.CommonCategoryComponent.DeepCopyInto(&out.CommonCategoryComponent)
	in.ServiceSpec.DeepCopyInto(&out.ServiceSpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CategoryClusterService.
func (in *CategoryClusterService) DeepCopy() *CategoryClusterService {
	if in == nil {
		return nil
	}
	out := new(CategoryClusterService)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CommonCategoryComponent) DeepCopyInto(out *CommonCategoryComponent) {
	*out = *in
	out.Component = in.Component
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CommonCategoryComponent.
func (in *CommonCategoryComponent) DeepCopy() *CommonCategoryComponent {
	if in == nil {
		return nil
	}
	out := new(CommonCategoryComponent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Component) DeepCopyInto(out *Component) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Component.
func (in *Component) DeepCopy() *Component {
	if in == nil {
		return nil
	}
	out := new(Component)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComponentState) DeepCopyInto(out *ComponentState) {
	*out = *in
	if in.Details != nil {
		in, out := &in.Details, &out.Details
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ActionState != nil {
		in, out := &in.ActionState, &out.ActionState
		*out = make(map[Action]ActionState, len(*in))
		for key, val := range *in {
			(*out)[key] = *val.DeepCopy()
		}
	}
	if in.UpdateTimestamp != nil {
		in, out := &in.UpdateTimestamp, &out.UpdateTimestamp
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComponentState.
func (in *ComponentState) DeepCopy() *ComponentState {
	if in == nil {
		return nil
	}
	out := new(ComponentState)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MiddlewareCluster) DeepCopyInto(out *MiddlewareCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MiddlewareCluster.
func (in *MiddlewareCluster) DeepCopy() *MiddlewareCluster {
	if in == nil {
		return nil
	}
	out := new(MiddlewareCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MiddlewareCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MiddlewareClusterList) DeepCopyInto(out *MiddlewareClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]MiddlewareCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MiddlewareClusterList.
func (in *MiddlewareClusterList) DeepCopy() *MiddlewareClusterList {
	if in == nil {
		return nil
	}
	out := new(MiddlewareClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MiddlewareClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MiddlewareClusterSpec) DeepCopyInto(out *MiddlewareClusterSpec) {
	*out = *in
	if in.Components != nil {
		in, out := &in.Components, &out.Components
		*out = make([]*CategoryClusterComponent, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CategoryClusterComponent)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Conf != nil {
		in, out := &in.Conf, &out.Conf
		*out = make([]*NamedProperties, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(NamedProperties)
				**out = **in
			}
		}
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = make([]*CategoryClusterService, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CategoryClusterService)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Ingress != nil {
		in, out := &in.Ingress, &out.Ingress
		*out = make([]*CategoryClusterIngress, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CategoryClusterIngress)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.MixJob != nil {
		in, out := &in.MixJob, &out.MixJob
		*out = make([]*CategoryClusterMixJob, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(CategoryClusterMixJob)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MiddlewareClusterSpec.
func (in *MiddlewareClusterSpec) DeepCopy() *MiddlewareClusterSpec {
	if in == nil {
		return nil
	}
	out := new(MiddlewareClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MiddlewareClusterStatus) DeepCopyInto(out *MiddlewareClusterStatus) {
	*out = *in
	if in.ComponentStatus != nil {
		in, out := &in.ComponentStatus, &out.ComponentStatus
		*out = make(map[ComponentName]*ComponentState, len(*in))
		for key, val := range *in {
			var outVal *ComponentState
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(ComponentState)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdateTimestamp != nil {
		in, out := &in.UpdateTimestamp, &out.UpdateTimestamp
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MiddlewareClusterStatus.
func (in *MiddlewareClusterStatus) DeepCopy() *MiddlewareClusterStatus {
	if in == nil {
		return nil
	}
	out := new(MiddlewareClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NamedProperties) DeepCopyInto(out *NamedProperties) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NamedProperties.
func (in *NamedProperties) DeepCopy() *NamedProperties {
	if in == nil {
		return nil
	}
	out := new(NamedProperties)
	in.DeepCopyInto(out)
	return out
}
